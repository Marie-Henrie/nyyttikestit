// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Model;

#nullable disable

namespace Server.Data.Migrations
{
    [DbContext(typeof(NyyttiDbContext))]
    [Migration("20230115174623_SecondMigration")]
    partial class SecondMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("PotTag", b =>
                {
                    b.Property<int>("PotsPot_Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TagsTag_Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("PotsPot_Id", "TagsTag_Id");

                    b.HasIndex("TagsTag_Id");

                    b.ToTable("PotTag");
                });

            modelBuilder.Entity("Server.Model.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Server.Model.Pot", b =>
                {
                    b.Property<int>("Pot_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Course_Id")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("DishName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Potluck_Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Pot_Id");

                    b.HasIndex("Potluck_Id");

                    b.ToTable("Pots");
                });

            modelBuilder.Entity("Server.Model.Potluck", b =>
                {
                    b.Property<int>("Potluck_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HashedPassword")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Potluck_Id");

                    b.ToTable("Potlucks");
                });

            modelBuilder.Entity("Server.Model.Tag", b =>
                {
                    b.Property<int>("Tag_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Tag_Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("PotTag", b =>
                {
                    b.HasOne("Server.Model.Pot", null)
                        .WithMany()
                        .HasForeignKey("PotsPot_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Server.Model.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsTag_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Server.Model.Pot", b =>
                {
                    b.HasOne("Server.Model.Potluck", "Potluck")
                        .WithMany("Pots")
                        .HasForeignKey("Potluck_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Potluck");
                });

            modelBuilder.Entity("Server.Model.Potluck", b =>
                {
                    b.Navigation("Pots");
                });
#pragma warning restore 612, 618
        }
    }
}
